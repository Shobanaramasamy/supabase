{"ast":null,"code":"import _classCallCheck from \"/Users/mako/Downloads/todo_supabase/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mako/Downloads/todo_supabase/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Transformers } from '@supabase/realtime-js';\nexport var SupabaseRealtimeClient = /*#__PURE__*/function () {\n  function SupabaseRealtimeClient(socket, headers, schema, tableName) {\n    _classCallCheck(this, SupabaseRealtimeClient);\n    var chanParams = {};\n    var topic = tableName === '*' ? \"realtime:\".concat(schema) : \"realtime:\".concat(schema, \":\").concat(tableName);\n    var userToken = headers['Authorization'].split(' ')[1];\n    if (userToken) {\n      chanParams['user_token'] = userToken;\n    }\n    this.subscription = socket.channel(topic, chanParams);\n  }\n  _createClass(SupabaseRealtimeClient, [{\n    key: \"getPayloadRecords\",\n    value: function getPayloadRecords(payload) {\n      var records = {\n        new: {},\n        old: {}\n      };\n      if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n        records.new = Transformers.convertChangeData(payload.columns, payload.record);\n      }\n      if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n        records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n      }\n      return records;\n    }\n    /**\n     * The event you want to listen to.\n     *\n     * @param event The event\n     * @param callback A callback function that is called whenever the event occurs.\n     */\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      var _this = this;\n      this.subscription.on(event, function (payload) {\n        var enrichedPayload = {\n          schema: payload.schema,\n          table: payload.table,\n          commit_timestamp: payload.commit_timestamp,\n          eventType: payload.type,\n          new: {},\n          old: {},\n          errors: payload.errors\n        };\n        enrichedPayload = Object.assign(Object.assign({}, enrichedPayload), _this.getPayloadRecords(payload));\n        callback(enrichedPayload);\n      });\n      return this;\n    }\n    /**\n     * Enables the subscription.\n     */\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n      this.subscription.onError(function (e) {\n        return callback('SUBSCRIPTION_ERROR', e);\n      });\n      this.subscription.onClose(function () {\n        return callback('CLOSED');\n      });\n      this.subscription.subscribe().receive('ok', function () {\n        return callback('SUBSCRIBED');\n      }).receive('error', function (e) {\n        return callback('SUBSCRIPTION_ERROR', e);\n      }).receive('timeout', function () {\n        return callback('RETRYING_AFTER_TIMEOUT');\n      });\n      return this.subscription;\n    }\n  }]);\n  return SupabaseRealtimeClient;\n}();","map":{"version":3,"names":["Transformers","SupabaseRealtimeClient","socket","headers","schema","tableName","_classCallCheck","chanParams","topic","concat","userToken","split","subscription","channel","_createClass","key","value","getPayloadRecords","payload","records","new","old","type","convertChangeData","columns","record","old_record","on","event","callback","_this","enrichedPayload","table","commit_timestamp","eventType","errors","Object","assign","subscribe","arguments","length","undefined","onError","e","onClose","receive"],"sources":["/Users/mako/Downloads/todo_supabase/node_modules/@supabase/supabase-js/src/lib/SupabaseRealtimeClient.ts"],"sourcesContent":["import { RealtimeSubscription, RealtimeClient, Transformers } from '@supabase/realtime-js'\nimport { GenericObject, SupabaseEventTypes, SupabaseRealtimePayload } from './types'\n\nexport class SupabaseRealtimeClient {\n  subscription: RealtimeSubscription\n\n  constructor(socket: RealtimeClient, headers: GenericObject, schema: string, tableName: string) {\n    const chanParams: GenericObject = {}\n    const topic = tableName === '*' ? `realtime:${schema}` : `realtime:${schema}:${tableName}`\n    const userToken = headers['Authorization'].split(' ')[1]\n\n    if (userToken) {\n      chanParams['user_token'] = userToken\n    }\n\n    this.subscription = socket.channel(topic, chanParams) as RealtimeSubscription\n  }\n\n  private getPayloadRecords(payload: any) {\n    const records = {\n      new: {},\n      old: {},\n    }\n\n    if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n      records.new = Transformers.convertChangeData(payload.columns, payload.record)\n    }\n\n    if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n      records.old = Transformers.convertChangeData(payload.columns, payload.old_record)\n    }\n\n    return records\n  }\n\n  /**\n   * The event you want to listen to.\n   *\n   * @param event The event\n   * @param callback A callback function that is called whenever the event occurs.\n   */\n  on(event: SupabaseEventTypes, callback: (payload: SupabaseRealtimePayload<any>) => void) {\n    this.subscription.on(event, (payload: any) => {\n      let enrichedPayload: SupabaseRealtimePayload<any> = {\n        schema: payload.schema,\n        table: payload.table,\n        commit_timestamp: payload.commit_timestamp,\n        eventType: payload.type,\n        new: {},\n        old: {},\n        errors: payload.errors,\n      }\n\n      enrichedPayload = { ...enrichedPayload, ...this.getPayloadRecords(payload) }\n\n      callback(enrichedPayload)\n    })\n    return this\n  }\n\n  /**\n   * Enables the subscription.\n   */\n  subscribe(callback: Function = () => {}) {\n    this.subscription.onError((e: Error) => callback('SUBSCRIPTION_ERROR', e))\n    this.subscription.onClose(() => callback('CLOSED'))\n    this.subscription\n      .subscribe()\n      .receive('ok', () => callback('SUBSCRIBED'))\n      .receive('error', (e: Error) => callback('SUBSCRIPTION_ERROR', e))\n      .receive('timeout', () => callback('RETRYING_AFTER_TIMEOUT'))\n    return this.subscription\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}