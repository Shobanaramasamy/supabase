{"ast":null,"code":"var _jsxFileName = \"/Users/mako/Downloads/supabase-todo-main/src/components/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport supabase from '../supabase';\nimport { Flex, Heading, Input, Button, FormControl, FormLabel, Switch, useColorMode, useColorModeValue } from '@chakra-ui/react';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\ncreateClient(supabaseUrl, supabaseAnonKey);\nconst Login = () => {\n  _s();\n  const {\n    toggleColorMode\n  } = useColorMode();\n  const navigate = useNavigate();\n  const toast = useToast();\n  const formBackground = useColorModeValue('gray.100', 'gray.700');\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  async function SignIn() {\n    console.log(\"yessss in login\");\n    console.log(\"email\", email);\n    const signUp = await supabase.auth.signUp({\n      email: email,\n      password: password\n    });\n    console.log(\"data i i\", signUp);\n    if (signUp.user) {\n      console.log(\"data i i\", signUp);\n      navigate('/todo');\n    } else {\n      toast({\n        title: error || 'Task added!',\n        position: 'top',\n        status: error ? 'error' : 'success',\n        duration: 2000,\n        isClosable: true\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    h: \"100vh\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      bg: formBackground,\n      p: 12,\n      borderRadius: 8,\n      boxShadow: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        mb: 6,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"johndoe@gmail.com\",\n        type: \"email\",\n        variant: \"filled\",\n        onChange: e => setEmail(e.target.value),\n        mb: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"**********\",\n        type: \"password\",\n        variant: \"filled\",\n        onChange: e => setPassword(e.target.value),\n        mb: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"teal\",\n        onClick: SignIn,\n        mb: 8,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"teal\",\n      onClick: SignIn,\n      mb: 8,\n      children: \"sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"B0aLUXn5q6g0aQTl6Er/u+wXLcc=\", true, function () {\n  return [useColorMode, useNavigate, useColorModeValue];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","supabase","Flex","Heading","Input","Button","FormControl","FormLabel","Switch","useColorMode","useColorModeValue","createClient","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","Login","_s","toggleColorMode","navigate","toast","useToast","formBackground","email","setEmail","password","setPassword","SignIn","console","log","signUp","auth","user","title","error","position","status","duration","isClosable","h","alignItems","justifyContent","children","flexDirection","bg","p","borderRadius","boxShadow","mb","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","variant","onChange","e","target","value","colorScheme","onClick","_c","$RefreshReg$"],"sources":["/Users/mako/Downloads/supabase-todo-main/src/components/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nimport supabase from '../supabase';\n\nimport {\n  Flex,\n  Heading,\n  Input,\n  Button,\n  FormControl,\n  FormLabel,\n  Switch,\n  useColorMode,\n  useColorModeValue,\n} from '@chakra-ui/react';\n\n\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\ncreateClient(supabaseUrl, supabaseAnonKey);\n\n\nconst Login = () => {\n  const { toggleColorMode } = useColorMode();\n  const navigate = useNavigate();\n  const toast = useToast();\n\n  const formBackground = useColorModeValue('gray.100', 'gray.700');\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  async function SignIn() {\n    console.log(\"yessss in login\")\n    console.log(\"email\", email)\n\n\n\n    const signUp = await supabase.auth.signUp({\n   \n      email: email,\n      password: password,\n    })\n    console.log(\"data i i\",signUp)\n\n  \nif(signUp.user){\n  console.log(\"data i i\",signUp)\n\n  navigate('/todo');\n\n}\nelse{\n  toast({\n    title: error || 'Task added!',\n    position: 'top',\n    status: error ? 'error' : 'success',\n    duration: 2000,\n    isClosable: true,\n  });\n}\n\n\n  }\n\n\n  return (\n    <Flex h=\"100vh\" alignItems=\"center\" justifyContent=\"center\">\n      <Flex\n        flexDirection=\"column\"\n        bg={formBackground}\n        p={12}\n        borderRadius={8}\n        boxShadow=\"lg\"\n      >\n        <Heading mb={6}>Log In</Heading>\n        <Input\n          placeholder=\"johndoe@gmail.com\"\n          type=\"email\"\n          variant=\"filled\"\n          onChange={(e) => setEmail(e.target.value)}\n          mb={3}\n        />\n        <Input\n          placeholder=\"**********\"\n          type=\"password\"\n          variant=\"filled\"\n          onChange={(e) => setPassword(e.target.value)}\n          mb={6}\n        />\n        <Button colorScheme=\"teal\" onClick={SignIn} mb={8}>\n          Log In\n        </Button>\n        {/* <FormControl display=\"flex\" alignItems=\"center\">\n          <FormLabel htmlFor=\"dark_mode\" mb=\"0\">\n            Enable Dark Mode?\n          </FormLabel>\n          <Switch\n            id=\"dark_mode\"\n            colorScheme=\"teal\"\n            size=\"lg\"\n            onChange={toggleColorMode}\n          />\n        </FormControl> */}\n      </Flex>\n      <Button colorScheme=\"teal\" onClick={SignIn} mb={8}>\n         sign up\n        </Button>\n    </Flex>\n    \n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}