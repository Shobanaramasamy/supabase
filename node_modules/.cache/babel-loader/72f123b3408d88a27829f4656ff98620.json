{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mako/Downloads/todo_supabase/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/mako/Downloads/todo_supabase/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mako/Downloads/todo_supabase/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { resolveFetch } from './helper';\nexport var FunctionsClient = /*#__PURE__*/function () {\n  function FunctionsClient(url) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$headers = _ref.headers,\n      headers = _ref$headers === void 0 ? {} : _ref$headers,\n      customFetch = _ref.customFetch;\n    _classCallCheck(this, FunctionsClient);\n    this.url = url;\n    this.headers = headers;\n    this.fetch = resolveFetch(customFetch);\n  }\n  /**\n   * Updates the authorization header\n   * @params token - the new jwt token sent in the authorisation header\n   */\n  _createClass(FunctionsClient, [{\n    key: \"setAuth\",\n    value: function setAuth(token) {\n      this.headers.Authorization = \"Bearer \".concat(token);\n    }\n    /**\n     * Invokes a function\n     * @param functionName - the name of the function to invoke\n     * @param invokeOptions - object with the following properties\n     * `headers`: object representing the headers to send with the request\n     * `body`: the body of the request\n     * `responseType`: how the response should be parsed. The default is `json`\n     */\n  }, {\n    key: \"invoke\",\n    value: function invoke(functionName, invokeOptions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _ref2, headers, body, response, isRelayError, data, _ref3, responseType;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _ref2 = invokeOptions !== null && invokeOptions !== void 0 ? invokeOptions : {}, headers = _ref2.headers, body = _ref2.body;\n                _context.next = 4;\n                return this.fetch(\"\".concat(this.url, \"/\").concat(functionName), {\n                  method: 'POST',\n                  headers: Object.assign({}, this.headers, headers),\n                  body: body\n                });\n              case 4:\n                response = _context.sent;\n                isRelayError = response.headers.get('x-relay-error');\n                if (!(isRelayError && isRelayError === 'true')) {\n                  _context.next = 13;\n                  break;\n                }\n                _context.t0 = Error;\n                _context.next = 10;\n                return response.text();\n              case 10:\n                _context.t1 = _context.sent;\n                _context.t2 = new _context.t0(_context.t1);\n                return _context.abrupt(\"return\", {\n                  data: null,\n                  error: _context.t2\n                });\n              case 13:\n                _ref3 = invokeOptions !== null && invokeOptions !== void 0 ? invokeOptions : {}, responseType = _ref3.responseType;\n                if (!(!responseType || responseType === 'json')) {\n                  _context.next = 20;\n                  break;\n                }\n                _context.next = 17;\n                return response.json();\n              case 17:\n                data = _context.sent;\n                _context.next = 35;\n                break;\n              case 20:\n                if (!(responseType === 'arrayBuffer')) {\n                  _context.next = 26;\n                  break;\n                }\n                _context.next = 23;\n                return response.arrayBuffer();\n              case 23:\n                data = _context.sent;\n                _context.next = 35;\n                break;\n              case 26:\n                if (!(responseType === 'blob')) {\n                  _context.next = 32;\n                  break;\n                }\n                _context.next = 29;\n                return response.blob();\n              case 29:\n                data = _context.sent;\n                _context.next = 35;\n                break;\n              case 32:\n                _context.next = 34;\n                return response.text();\n              case 34:\n                data = _context.sent;\n              case 35:\n                return _context.abrupt(\"return\", {\n                  data: data,\n                  error: null\n                });\n              case 38:\n                _context.prev = 38;\n                _context.t3 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", {\n                  data: null,\n                  error: _context.t3\n                });\n              case 41:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 38]]);\n      }));\n    }\n  }]);\n  return FunctionsClient;\n}();","map":{"version":3,"names":["resolveFetch","FunctionsClient","url","_ref","arguments","length","undefined","_ref$headers","headers","customFetch","_classCallCheck","fetch","_createClass","key","value","setAuth","token","Authorization","concat","invoke","functionName","invokeOptions","_ref2","body","_context","next","method","Object","assign","response","sent","isRelayError","get","t0","Error","text","t1","t2","abrupt","data","error","_ref3","responseType","json","arrayBuffer","blob","prev","t3","stop","_callee"],"sources":["/Users/mako/Downloads/todo_supabase/node_modules/@supabase/functions-js/src/index.ts"],"sourcesContent":["import { resolveFetch } from './helper'\nimport { Fetch, FunctionInvokeOptions } from './types'\n\nexport class FunctionsClient {\n  protected url: string\n  protected headers: Record<string, string>\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      customFetch,\n    }: {\n      headers?: Record<string, string>\n      customFetch?: Fetch\n    } = {}\n  ) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(customFetch)\n  }\n\n  /**\n   * Updates the authorization header\n   * @params token - the new jwt token sent in the authorisation header\n   */\n  setAuth(token: string) {\n    this.headers.Authorization = `Bearer ${token}`\n  }\n\n  /**\n   * Invokes a function\n   * @param functionName - the name of the function to invoke\n   * @param invokeOptions - object with the following properties\n   * `headers`: object representing the headers to send with the request\n   * `body`: the body of the request\n   * `responseType`: how the response should be parsed. The default is `json`\n   */\n  async invoke<T = any>(\n    functionName: string,\n    invokeOptions?: FunctionInvokeOptions\n  ): Promise<{ data: T; error: null } | { data: null; error: Error }> {\n    try {\n      const { headers, body } = invokeOptions ?? {}\n      const response = await this.fetch(`${this.url}/${functionName}`, {\n        method: 'POST',\n        headers: Object.assign({}, this.headers, headers),\n        body,\n      })\n\n      const isRelayError = response.headers.get('x-relay-error')\n      if (isRelayError && isRelayError === 'true') {\n        return { data: null, error: new Error(await response.text()) }\n      }\n\n      let data\n      const { responseType } = invokeOptions ?? {}\n      if (!responseType || responseType === 'json') {\n        data = await response.json()\n      } else if (responseType === 'arrayBuffer') {\n        data = await response.arrayBuffer()\n      } else if (responseType === 'blob') {\n        data = await response.blob()\n      } else {\n        data = await response.text()\n      }\n\n      return { data, error: null }\n    } catch (error: any) {\n      return { data: null, error }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}