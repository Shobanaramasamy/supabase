{"ast":null,"code":"var _jsxFileName = \"/Users/mako/Downloads/supabase-todo-main/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport { VStack, StackDivider, HStack, Text, Image, Box, Skeleton, useToast } from '@chakra-ui/react';\nimport DeleteTask from './DeleteTask';\nimport ClearTasks from './ClearTasks';\nimport img from '../images/empty.jpg';\nimport EditTask from './EditTask';\nimport { useRealtime } from 'react-supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList() {\n  _s();\n  const [result, reexecute] = useRealtime('todos');\n  const {\n    data: tasks,\n    error,\n    fetching\n  } = result;\n  console.log(\"tasks\", tasks);\n  if (fetching) {\n    return /*#__PURE__*/_jsxDEV(Skeleton, {\n      width: {\n        base: '90vw',\n        sm: '80vw',\n        lg: '50vw',\n        xl: '30vw'\n      },\n      height: \"300px\",\n      rounded: \"md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n  if (!tasks || !tasks.length) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: img,\n        mt: \"30px\",\n        maxW: \"95%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(VStack, {\n      divider: /*#__PURE__*/_jsxDEV(StackDivider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }, this),\n      borderColor: \"gray.100\",\n      borderWidth: \"2px\",\n      p: \"5\",\n      borderRadius: \"lg\",\n      w: \"100%\",\n      maxW: {\n        base: '90vw',\n        sm: '80vw',\n        lg: '50vw',\n        xl: '30vw'\n      },\n      alignItems: \"stretch\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          w: \"100%\",\n          p: \"8px\",\n          borderRadius: \"lg\",\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteTask, {\n          id: task.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditTask, {\n          id: task.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClearTasks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TaskList, \"1G8le33Z5fK90ypWB4OfXMexWs8=\", false, function () {\n  return [useRealtime];\n});\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["VStack","StackDivider","HStack","Text","Image","Box","Skeleton","useToast","DeleteTask","ClearTasks","img","EditTask","useRealtime","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","result","reexecute","data","tasks","error","fetching","console","log","width","base","sm","lg","xl","height","rounded","fileName","_jsxFileName","lineNumber","columnNumber","length","align","children","src","mt","maxW","divider","borderColor","borderWidth","p","borderRadius","w","alignItems","map","task","text","id","_c","$RefreshReg$"],"sources":["/Users/mako/Downloads/supabase-todo-main/src/components/TaskList.js"],"sourcesContent":["import {\n  VStack,\n  StackDivider,\n  HStack,\n  Text,\n  Image,\n  Box,\n  Skeleton,\n  useToast\n} from '@chakra-ui/react';\nimport DeleteTask from './DeleteTask';\nimport ClearTasks from './ClearTasks';\nimport img from '../images/empty.jpg';\nimport EditTask from './EditTask'\nimport { useRealtime } from 'react-supabase';\n\n\nexport default function TaskList() {\n  const [result, reexecute] = useRealtime('todos');\n  const { data: tasks, error, fetching } = result;\nconsole.log(\"tasks\",tasks)\n  if (fetching) {\n    return (\n      <Skeleton\n        width={{ base: '90vw', sm: '80vw', lg: '50vw', xl: '30vw' }}\n        height=\"300px\"\n        rounded=\"md\"\n      />\n    );\n  }\n\n  if (!tasks || !tasks.length) {\n    return (\n      <Box align=\"center\">\n        <Image src={img} mt=\"30px\" maxW=\"95%\" />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <VStack\n        divider={<StackDivider />}\n        borderColor=\"gray.100\"\n        borderWidth=\"2px\"\n        p=\"5\"\n        borderRadius=\"lg\"\n        w=\"100%\"\n        maxW={{ base: '90vw', sm: '80vw', lg: '50vw', xl: '30vw' }}\n        alignItems=\"stretch\"\n      >\n        {tasks.map(task => (\n          <HStack key={task.id}>\n            <Text w=\"100%\" p=\"8px\" borderRadius=\"lg\">\n              {task.text}\n            </Text>\n            <DeleteTask id={task.id} />\n            <EditTask id={task.id} />\n          </HStack>\n        ))}\n      </VStack>\n\n      <ClearTasks />\n    </>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}