{"ast":null,"code":"var _jsxFileName = \"/Users/mako/Downloads/supabase-todo-main/src/components/TaskList.js\";\nimport { VStack, StackDivider, HStack, Text, Image, Box, Skeleton } from '@chakra-ui/react';\nimport DeleteTask from './DeleteTask';\nimport ClearTasks from './ClearTasks';\nimport img from '../images/empty.png';\nimport { useRealtime } from 'react-supabase';\nimport { supabase } from '../supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default async function TaskList() {\n  //  let a= useRealtime('todos');\n  //  console.log(\"a\",a)\n  //   const [result, reexecute] = useRealtime('todos');\n  //   const { data: tasks, error, fetching } = result;\n\n  let {\n    data: todos,\n    error\n  } = await supabase.from('todos').select('*');\n  console.log(\"tasks\", todos);\n  // if (fetching) {\n  //   return (\n  //     <Skeleton\n  //       width={{ base: '90vw', sm: '80vw', lg: '50vw', xl: '30vw' }}\n  //       height=\"300px\"\n  //       rounded=\"md\"\n  //     />\n  //   );\n  // }\n\n  // if (!tasks || !tasks.length) {\n  //   return (\n  //     <Box align=\"center\">\n  //       <Image src={img} mt=\"30px\" maxW=\"95%\" />\n  //     </Box>\n  //   );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(VStack, {\n      divider: /*#__PURE__*/_jsxDEV(StackDivider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this),\n      borderColor: \"gray.100\",\n      borderWidth: \"2px\",\n      p: \"5\",\n      borderRadius: \"lg\",\n      w: \"100%\",\n      maxW: {\n        base: '90vw',\n        sm: '80vw',\n        lg: '50vw',\n        xl: '30vw'\n      },\n      alignItems: \"stretch\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          w: \"100%\",\n          p: \"8px\",\n          borderRadius: \"lg\",\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteTask, {\n          id: task.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClearTasks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["VStack","StackDivider","HStack","Text","Image","Box","Skeleton","DeleteTask","ClearTasks","img","useRealtime","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","data","todos","error","from","select","console","log","children","divider","fileName","_jsxFileName","lineNumber","columnNumber","borderColor","borderWidth","p","borderRadius","w","maxW","base","sm","lg","xl","alignItems","tasks","map","task","text","id","_c","$RefreshReg$"],"sources":["/Users/mako/Downloads/supabase-todo-main/src/components/TaskList.js"],"sourcesContent":["import {\n  VStack,\n  StackDivider,\n  HStack,\n  Text,\n  Image,\n  Box,\n  Skeleton,\n} from '@chakra-ui/react';\nimport DeleteTask from './DeleteTask';\nimport ClearTasks from './ClearTasks';\nimport img from '../images/empty.png';\nimport { useRealtime } from 'react-supabase';\n\nimport {supabase} from '../supabase'\nexport default async function TaskList() {\n//  let a= useRealtime('todos');\n//  console.log(\"a\",a)\n//   const [result, reexecute] = useRealtime('todos');\n//   const { data: tasks, error, fetching } = result;\n\nlet { data: todos, error } = await supabase\n  .from('todos')\n  .select('*')\n\nconsole.log(\"tasks\",todos)\n  // if (fetching) {\n  //   return (\n  //     <Skeleton\n  //       width={{ base: '90vw', sm: '80vw', lg: '50vw', xl: '30vw' }}\n  //       height=\"300px\"\n  //       rounded=\"md\"\n  //     />\n  //   );\n  // }\n\n  // if (!tasks || !tasks.length) {\n  //   return (\n  //     <Box align=\"center\">\n  //       <Image src={img} mt=\"30px\" maxW=\"95%\" />\n  //     </Box>\n  //   );\n  // }\n\n  return (\n    <>\n      <VStack\n        divider={<StackDivider />}\n        borderColor=\"gray.100\"\n        borderWidth=\"2px\"\n        p=\"5\"\n        borderRadius=\"lg\"\n        w=\"100%\"\n        maxW={{ base: '90vw', sm: '80vw', lg: '50vw', xl: '30vw' }}\n        alignItems=\"stretch\"\n      >\n        {tasks.map(task => (\n          <HStack key={task.id}>\n            <Text w=\"100%\" p=\"8px\" borderRadius=\"lg\">\n              {task.text}\n            </Text>\n            <DeleteTask id={task.id} />\n          </HStack>\n        ))}\n      </VStack>\n\n      <ClearTasks />\n    </>\n  );\n}"],"mappings":";AAAA,SACEA,MAAM,EACNC,YAAY,EACZC,MAAM,EACNC,IAAI,EACJC,KAAK,EACLC,GAAG,EACHC,QAAQ,QACH,kBAAkB;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,SAAQC,QAAQ,QAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACpC,eAAe,eAAeC,QAAQA,CAAA,EAAG;EACzC;EACA;EACA;EACA;;EAEA,IAAI;IAAEC,IAAI,EAAEC,KAAK;IAAEC;EAAM,CAAC,GAAG,MAAMR,QAAQ,CACxCS,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,GAAG,CAAC;EAEdC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACL,KAAK,CAAC;EACxB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEL,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA,CAACb,MAAM;MACLyB,OAAO,eAAEZ,OAAA,CAACZ,YAAY;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAC1BC,WAAW,EAAC,UAAU;MACtBC,WAAW,EAAC,KAAK;MACjBC,CAAC,EAAC,GAAG;MACLC,YAAY,EAAC,IAAI;MACjBC,CAAC,EAAC,MAAM;MACRC,IAAI,EAAE;QAAEC,IAAI,EAAE,MAAM;QAAEC,EAAE,EAAE,MAAM;QAAEC,EAAE,EAAE,MAAM;QAAEC,EAAE,EAAE;MAAO,CAAE;MAC3DC,UAAU,EAAC,SAAS;MAAAhB,QAAA,EAEnBiB,KAAK,CAACC,GAAG,CAACC,IAAI,iBACb9B,OAAA,CAACX,MAAM;QAAAsB,QAAA,gBACLX,OAAA,CAACV,IAAI;UAAC+B,CAAC,EAAC,MAAM;UAACF,CAAC,EAAC,KAAK;UAACC,YAAY,EAAC,IAAI;UAAAT,QAAA,EACrCmB,IAAI,CAACC;QAAI;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACPhB,OAAA,CAACN,UAAU;UAACsC,EAAE,EAAEF,IAAI,CAACE;QAAG;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAJhBc,IAAI,CAACE,EAAE;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKZ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAEThB,OAAA,CAACL,UAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACd,CAAC;AAEP;AAACiB,EAAA,GAtD6B9B,QAAQ;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}