{"ast":null,"code":"import _slicedToArray from \"/Users/mako/Downloads/todo_supabase/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/mako/Downloads/todo_supabase/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mako/Downloads/todo_supabase/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/mako/Downloads/todo_supabase/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/mako/Downloads/todo_supabase/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nvar PostgrestRpcBuilder = /*#__PURE__*/function (_PostgrestBuilder) {\n  _inherits(PostgrestRpcBuilder, _PostgrestBuilder);\n  var _super = _createSuper(PostgrestRpcBuilder);\n  function PostgrestRpcBuilder(url) {\n    var _this;\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$headers = _ref.headers,\n      headers = _ref$headers === void 0 ? {} : _ref$headers,\n      schema = _ref.schema,\n      fetch = _ref.fetch,\n      shouldThrowOnError = _ref.shouldThrowOnError;\n    _classCallCheck(this, PostgrestRpcBuilder);\n    _this = _super.call(this, {\n      fetch: fetch,\n      shouldThrowOnError: shouldThrowOnError\n    });\n    _this.url = new URL(url);\n    _this.headers = Object.assign({}, headers);\n    _this.schema = schema;\n    return _this;\n  }\n  /**\n   * Perform a function call.\n   */\n  _createClass(PostgrestRpcBuilder, [{\n    key: \"rpc\",\n    value: function rpc(params) {\n      var _this2 = this;\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref2$head = _ref2.head,\n        head = _ref2$head === void 0 ? false : _ref2$head,\n        _ref2$count = _ref2.count,\n        count = _ref2$count === void 0 ? null : _ref2$count;\n      if (head) {\n        this.method = 'HEAD';\n        if (params) {\n          Object.entries(params).forEach(function (_ref3) {\n            var _ref4 = _slicedToArray(_ref3, 2),\n              name = _ref4[0],\n              value = _ref4[1];\n            _this2.url.searchParams.append(name, value);\n          });\n        }\n      } else {\n        this.method = 'POST';\n        this.body = params;\n      }\n      if (count) {\n        if (this.headers['Prefer'] !== undefined) this.headers['Prefer'] += \",count=\".concat(count);else this.headers['Prefer'] = \"count=\".concat(count);\n      }\n      return new PostgrestFilterBuilder(this);\n    }\n  }]);\n  return PostgrestRpcBuilder;\n}(PostgrestBuilder);\nexport { PostgrestRpcBuilder as default };","map":{"version":3,"names":["PostgrestBuilder","PostgrestFilterBuilder","PostgrestRpcBuilder","_PostgrestBuilder","_inherits","_super","_createSuper","url","_this","_ref","arguments","length","undefined","_ref$headers","headers","schema","fetch","shouldThrowOnError","_classCallCheck","call","URL","Object","assign","_createClass","key","value","rpc","params","_this2","_ref2","_ref2$head","head","_ref2$count","count","method","entries","forEach","_ref3","_ref4","_slicedToArray","name","searchParams","append","body","concat","default"],"sources":["/Users/mako/Downloads/todo_supabase/node_modules/@supabase/postgrest-js/src/lib/PostgrestRpcBuilder.ts"],"sourcesContent":["import { Fetch, PostgrestBuilder } from './types'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\n\nexport default class PostgrestRpcBuilder<T> extends PostgrestBuilder<T> {\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      fetch,\n      shouldThrowOnError,\n    }: {\n      headers?: { [key: string]: string }\n      schema?: string\n      fetch?: Fetch\n      shouldThrowOnError?: boolean\n    } = {}\n  ) {\n    super(({ fetch, shouldThrowOnError } as unknown) as PostgrestBuilder<T>)\n    this.url = new URL(url)\n    this.headers = { ...headers }\n    this.schema = schema\n  }\n\n  /**\n   * Perform a function call.\n   */\n  rpc(\n    params?: object,\n    {\n      head = false,\n      count = null,\n    }: {\n      head?: boolean\n      count?: null | 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<T> {\n    if (head) {\n      this.method = 'HEAD'\n\n      if (params) {\n        Object.entries(params).forEach(([name, value]) => {\n          this.url.searchParams.append(name, value)\n        })\n      }\n    } else {\n      this.method = 'POST'\n      this.body = params\n    }\n\n    if (count) {\n      if (this.headers['Prefer'] !== undefined) this.headers['Prefer'] += `,count=${count}`\n      else this.headers['Prefer'] = `count=${count}`\n    }\n\n    return new PostgrestFilterBuilder(this)\n  }\n}\n"],"mappings":";;;;;AAAA,SAAgBA,gBAAgB,QAAQ,SAAS;AACjD,OAAOC,sBAAsB,MAAM,0BAA0B;AAAA,IAExCC,mBAAuB,0BAAAC,iBAAA;EAAAC,SAAA,CAAAF,mBAAA,EAAAC,iBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,mBAAA;EAC1C,SAAAA,oBACEK,GAAW,EAWL;IAAA,IAAAC,KAAA;IAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAF,EAAE;MAAAG,YAAA,GAAAJ,IAAA,CATJK,OAAO;MAAPA,OAAO,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;MACZE,MAAM,GAAAN,IAAA,CAANM,MAAM;MACNC,KAAK,GAAAP,IAAA,CAALO,KAAK;MACLC,kBAAkB,GAAAR,IAAA,CAAlBQ,kBAAkB;IAAAC,eAAA,OAAAhB,mBAAA;IAQpBM,KAAA,GAAAH,MAAA,CAAAc,IAAA,OAAO;MAAEH,KAAK,EAALA,KAAK;MAAEC,kBAAkB,EAAlBA;IAAkB,CAAqC;IACvET,KAAA,CAAKD,GAAG,GAAG,IAAIa,GAAG,CAACb,GAAG,CAAC;IACvBC,KAAA,CAAKM,OAAO,GAAAO,MAAA,CAAAC,MAAA,KAAQR,OAAO,CAAE;IAC7BN,KAAA,CAAKO,MAAM,GAAGA,MAAM;IAAA,OAAAP,KAAA;EACtB;EAEA;;;EAAAe,YAAA,CAAArB,mBAAA;IAAAsB,GAAA;IAAAC,KAAA,EAGA,SAAAC,IACEC,MAAe,EAOT;MAAA,IAAAC,MAAA;MAAA,IAAAC,KAAA,GAAAnB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAF,EAAE;QAAAoB,UAAA,GAAAD,KAAA,CALJE,IAAI;QAAJA,IAAI,GAAAD,UAAA,cAAG,KAAK,GAAAA,UAAA;QAAAE,WAAA,GAAAH,KAAA,CACZI,KAAK;QAALA,KAAK,GAAAD,WAAA,cAAG,IAAI,GAAAA,WAAA;MAMd,IAAID,IAAI,EAAE;QACR,IAAI,CAACG,MAAM,GAAG,MAAM;QAEpB,IAAIP,MAAM,EAAE;UACVN,MAAM,CAACc,OAAO,CAACR,MAAM,CAAC,CAACS,OAAO,CAAC,UAAAC,KAAA,EAAkB;YAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,KAAA;cAAhBG,IAAI,GAAAF,KAAA;cAAEb,KAAK,GAAAa,KAAA;YAC1CV,MAAI,CAACrB,GAAG,CAACkC,YAAY,CAACC,MAAM,CAACF,IAAI,EAAEf,KAAK,CAAC;UAC3C,CAAC,CAAC;;OAEL,MAAM;QACL,IAAI,CAACS,MAAM,GAAG,MAAM;QACpB,IAAI,CAACS,IAAI,GAAGhB,MAAM;;MAGpB,IAAIM,KAAK,EAAE;QACT,IAAI,IAAI,CAACnB,OAAO,CAAC,QAAQ,CAAC,KAAKF,SAAS,EAAE,IAAI,CAACE,OAAO,CAAC,QAAQ,CAAC,cAAA8B,MAAA,CAAcX,KAAK,CAAE,MAChF,IAAI,CAACnB,OAAO,CAAC,QAAQ,CAAC,YAAA8B,MAAA,CAAYX,KAAK,CAAE;;MAGhD,OAAO,IAAIhC,sBAAsB,CAAC,IAAI,CAAC;IACzC;EAAC;EAAA,OAAAC,mBAAA;AAAA,EArDiDF,gBAAmB;AAAA,SAAlDE,mBAAuB,IAAA2C,OAAA"},"metadata":{},"sourceType":"module"}